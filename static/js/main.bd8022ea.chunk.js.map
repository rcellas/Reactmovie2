{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImag/HeroImag.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","concat","image","title","text","SearchBar","state","value","timeout","doSearch","event","_this","setState","target","clearTimeout","setTimeout","callback","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","propType","PropTypes","string","bool","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","onClick","Spinner","Home","movies","currentPage","totalPages","searchTerm","searchItems","console","log","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","Object","toConsumableArray","results","heroImage","page","total_pages","localStorage","setItem","JSON","stringify","catch","error","getItem","parse","objectSpread","HeroImag","backdrop_path","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","poster_path","id","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Navigation","movie","MovieInfo","class","min","max","optimum","low","high","vote_average","directors","length","name","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","size","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","elements_Navigation_Navigation","location","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","runtime","elements_Actor_Actor","NotFound","App","BrowserRouter","basename","Fragment","elements_Header_Header","Switch","Route","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.bd8022ea.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from'react-router-dom';\nimport './Header.css';\n\nconst Header =() =>{\n    return(\n        <div className=\"rmdb-header\">\n            <div className=\"rmdb-header-content\">\n            <Link to=\"/\">\n                <img className=\"rmdb-logo\" src=\"./img/reactMovie_logo.png\" alt=\"React Movie\" />\n            </Link>\n                <img className=\"rmdb-tmdb-logo\" src=\"./img/tmdb_logo.png\" alt=\"Api bla bla bla\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\nimport './HeroImage.css';\n\n\nconst HeroImage =(props) =>{\n    return(\n        <div className=\"rmdb-heroimage\"\n            style={{\n                background:\n                `linear-gradient(to bottom, rgba(0,0,0,0)\n                39%,rgba(0,0,0,0)\n                41%,rgba(0,0,0,0.65)\n                100%),\n                url('${props.image}'), #1c1c1c`\n            }}\n        >\n            <div className=\"rmdb-heroimage-content\">\n                <div className=\"rmdb-heroimage-text\">\n                    <h1>{props.title}</h1>\n                    <p>{props.text}</p>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default HeroImage;","import React, {Component} from 'react';\n//import FontAwesome from 'react-fontawesome'\nimport './SearchBar.css';\n\nclass SearchBar extends Component{\n    state = {\n        value: ''\n      }\n    \n      timeout = null;\n    \n      doSearch = (event) => {\n        this.setState({ value: event.target.value })\n        clearTimeout(this.timeout);\n    \n        this.timeout = setTimeout( () => {\n          this.props.callback(this.state.value);\n        }, 500);\n      }\n\n    render(){\n        return (\n            <div className=\"rmdb-searchbar\">\n              <div className=\"rmdb-searchbar-content\">\n                <input\n                  type=\"text\"\n                  className=\"rmdb-searchbar-input\"\n                  placeholder=\"Search\"\n                  onChange={this.doSearch}\n                  value={this.state.value}\n                />\n              </div>\n            </div>\n          )\n    }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FourColGrid.css';\n\n\nconst FourColGrid =(props)=>{\n\n    const renderElements =()=>{\n        const gridElements =props.children.map((element,i)=>{\n            return(\n                <div key={i} className=\"rmdb-grid-elements\">\n                    {element}\n                </div>\n            )\n        })\n        return gridElements;\n    }\n    return(\n        <div className=\"rmdb-grid\">\n            {props.header && !props.loading ? <h1>{props.header}</h1>:null}\n            <div className=\"rmdb-grid-content\">\n                {renderElements()}\n            </div>\n        </div>\n    )\n}\n// los propType sirve para hacer una buena definicion del component en Reactjs.Así establecemos una serie de validadciones.\nFourColGrid.propType={\n    header:PropTypes.string,\n    loading:PropTypes.bool\n}\n\nexport default FourColGrid;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './MovieThumb.css';\n\nconst MovieThumb =(props) =>{\n    return (\n        <div className=\"rmdb-moviesthumb\">\n        {/* con esto haremos que las imagenes de las pelis se conviertan \n        en elementos clickables y asi no redirecciona a los datos de cada peli */}\n        {props.clickable ?\n            <Link to={{pathname:`/${props.movieId}`, movieName:`${props.movieName}`}}>\n            <img src={props.image} alt=\"moviethumb\"/>\n            </Link>\n        :\n        <img src={props.image} alt=\"moviethumb\"/>\n        }\n        </div>\n    )\n}\n\nMovieThumb.propTypes={\n    image:PropTypes.string,\n    movieId:PropTypes.number,\n    movieName:PropTypes.string\n}\n\nexport default MovieThumb;","import React from 'react';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = (props) =>{\n    return(\n        <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\n            <p>{props.text}</p>\n        </div>\n    )\n}\n\nexport default LoadMoreBtn;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner =() =>{\n    return(\n        <div className=\"loader\"></div>\n    )\n}\n\nexport default Spinner;","import React, {Component} from 'react';\nimport {API_URL, API_KEY,IMAGE_BASE_URL,POSTER_SIZE,BACKDROP_SIZE} from '../../config';\nimport HeroImage from '../elements/HeroImag/HeroImag';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\n\n\n// determina las funciones que debe hacer la pagina\nclass Home extends Component{\n    state ={\n        movies:[],\n        HeroImage:null,\n        loading:false,\n        currentPage: 0,\n        totalPages:0,\n        searchTerm: ''\n    }\n\n    // para que carge la pelicula más popular\n    componentDidMount(){\n        if(localStorage.getItem('HomeState')){\n            const state=JSON.parse(localStorage.getItem('HomeState'));\n            this.setState({...state});\n        }else{\n        this.setState({loading:true});\n        const endpoint =`${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n        this.fetchItems(endpoint);\n        }\n    }\n\n    // le decimos que nos carge la pelicula + popular del momento a través de la api\n    searchItems =(searchTerm)=>{\n        console.log(searchTerm);\n        let endpoint = '';\n        this.setState({\n            movies:[],\n            loading:true,\n            searchTerm\n        })\n\n        if (searchTerm === ''){\n            endpoint =`${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n        }else{\n            endpoint =`${API_URL}search/movies?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n        }\n        this.fetchItems(endpoint);\n    }\n\n    // para que nos cargue un listado más amplio de preguntas\n    loadMoreItems =() =>{\n        let endpoint='';\n        this.setState({loading:true});\n\n        if (this.state.searchTerm === '') {\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\n          } else {\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\n          }\n        this.fetchItems(endpoint);\n    }\n\n    fetchItems=(endpoint)=>{\n        fetch(endpoint)\n        .then(result => result.json())\n        .then(result => {\n            this.setState({\n                movies: [...this.state.movies, ...result.results],\n                heroImage: this.state.HeroImage || result.results[0],\n                loading: false,\n                currentPage:result.page,\n                totalPages:result.total_pages,\n            },()=>{\n                if(this.state.searchTerm ===\"\"){\n                    localStorage.setItem('HomeState',JSON.stringify(this.state));\n                }\n            })\n        })\n        .catch(error =>console.error('Error:',error))\n    }\n\n    render() {\n        return (\n          <div className=\"rmdb-home\">\n          {this.state.heroImage ?\n            <div>\n              <HeroImage\n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\n                title={this.state.heroImage.original_title}\n                text={this.state.heroImage.overview}\n              />\n              <SearchBar callback={this.searchItems} />\n            </div> : null }\n            <div className=\"rmdb-home-grid\">\n              <FourColGrid\n              header={this.state.searchTerm ? 'Search Result': 'Popular Movies'}\n              loading={this.state.loading}\n              >\n              {this.state.movies.map((element,i)=>{\n                  return<MovieThumb\n                        key={i}\n                        clickable={true}\n                        image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`:'.img/no_image.jpg'}\n                        movieId={element.id}\n                        movieName={element.original_title}\n                        />\n              })}\n              </FourColGrid>\n              {this.state.loading ? <Spinner /> : null}\n              {(this.state.currentPage <= this.state.totalPages && !this.state.loading) ?\n                <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\n                : null }\n            </div>\n          </div>\n        )\n      }\n    }\n\n\nexport default Home;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './Navigation.css';\n\n\nconst Navigation =(props)=>{\n    return(\n        <div className=\"rmdb-navigation\">\n            <div className=\"rmdb-navigation-content\">\n                <Link to=\"/\">\n                    <p>Home</p>\n                </Link>\n                <p>/</p>\n                <p>{props.movie}</p>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Navigation;","import React from 'react';\nimport {IMAGE_BASE_URL, POSTER_SIZE,BACKDROP_SIZE} from '../../../config';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo =(props) =>{\n    return(\n        <div className=\"rmdb-movieinfo\"\n            style={{\n                background:props.movie.backdrop_path?`url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')`: '#000'\n            }}\n        >\n        <div className=\"rmdb-movieinfo-content\">\n            <div class=\"rmdb-movieinfo-thumb\">\n            <MovieThumb\n                image={props.movie.poster_path ?`${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`: './img/no_image.jpg'}\n                clickable={false}\n            />\n            </div>\n            <div className=\"rmdb-movieinfo-text\">\n                <h1>{props.movie.title}</h1>\n                <h3>Plot</h3>\n                <p>{props.movie.overview}</p>\n                <h3>IMDB RATINF</h3>\n                <div className=\"rmdb-rating\">\n                    {/* la etiqueta meter sirve para mostrar las graficas */}\n                    <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average*10}></meter>\n                    <p className=\"rmdb-score\">{props.movie.vote_average}</p>\n                </div>\n                {props.directors.length > 1 ? <h3>DIRECTORS</h3>: <h3>DIRECTOR</h3>}\n                {props.directors.map((element,i)=>{\n                    return <p key={i} className=\"rmdb-director\">{element.name}</p>\n                })}\n            </div>\n            <i class=\"fas fa-film\" name=\"film\"></i>\n            {/* <FontAwesomeIcon className=\"fa-film\" name=\"film\" size=\"5px\"/> */}\n        </div>\n        </div>\n    )\n}\n\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\n//import FontAwesome from '@fortawesome/react-fontawesome';\nimport {calcTime, convertMoney} from '../../../helpers.js';\nimport './MovieInfoBar.css'\n\nconst MovieInfoBar =(props)=>{\n    return(\n        <div className=\"rmdb-movieinfobar\">\n            {/* duración de la pelicula */}\n            <div className=\"rmdb-movieinfobar-content\">\n                <div className=\"rmdb-movieinfobar-content-col\">\n                <i className=\"far fa-clock\" name=\"clock-o\" size=\"2px\"></i>\n                    <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(props.time)}</span>\n                </div>\n                {/* conste que ha tenido la pelicula */}\n                <div className=\"rmdb-movieinfobar-content-col\">\n                <i className=\"far fa-money-bill-alt\" name=\"money\" size=\"2px\"></i>\n                    <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\n                </div>\n                {/* ganancias de la pelicula */}\n                <div className=\"rmdb-movieinfobar-content-col\">\n                <i class=\"fas fa-ticket-alt\" name=\"ticket\" size=\"2px\"></i>\n                    <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieInfoBar;","import React from 'react';\nimport {IMAGE_BASE_URL} from '../../../config';\nimport './Actor.css';\n\nconst Actor =(props)=>{\n    const POSTER_SIZE=\"w154\";\n\n    return (\n        <div className=\"rmdb-actor\">\n        <div className=\"rmdb-box\">\n          <img\n            src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './img/no_image.jpg'}\n            alt=\"actorthumb\"\n          />\n            <h3 className=\"rmdb-actor-name\">{props.actor.name}</h3>\n            <h4 className=\"rmdb-actor-character\">{props.actor.character}</h4>\n          </div>\n        </div>\n    )\n}\n\nexport default Actor;","import React, {Component} from 'react';\nimport {API_URL,API_KEY} from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\n\nclass Movie extends Component{\n    state={\n        movies:null,\n        actors:null,\n        directors:[],\n        loading:false\n    }\n\n    // Este método solo se ejecuta justo después de que el componente haya sido montado en el DOM. perfecto para integrar otras librerias.\n    componentDidMount(){\n        if(localStorage.getItem(`${this.props.match.params.movieId}`)) {\n            const state=JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\n            this.setState({...state});\n        }else{\n            this.setState({loading:true})\n            //primer fetch de las pelis\n            const endpoint =`${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\n            this.fetchItems(endpoint);\n        }\n        \n    }\n\n    fetchItems=(endpoint)=>{\n        fetch(endpoint)\n        .then(result =>result.json())\n        .then(result=>{\n            console.log(result)\n            //si no encuentra la peli\n            if (result.status_code){\n                this.setState({loading:false});\n            }else{\n                //pero si me encuentra la pelicula, que me muestre la información.\n                this.setState({movie: result},()=>{\n                    //...then fetch actors in the setState callback function\n                    const endpoint =`${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`\n                    fetch(endpoint)\n                    .then(result =>result.json())\n                    .then(result=>{\n                        const directors=result.crew.filter((member)=>member.job===\"Director\");\n                        // muestra a los actores que han estado dentro de la peli\n                        this.setState({\n                            actors:result.cast,\n                            directors,\n                            loading:false\n                        },()=>{\n                            localStorage.setItem(`${this.props.match.params.movieId}`,JSON.stringify(this.state));\n                        })\n                    })\n                })\n            }\n        })\n        .catch(error=>console.error('Error:',error))\n    }\n    render(){\n        return(\n            <div className=\"rmdb-movie\">\n                {this.state.movie ?\n                    <div>\n                        <Navigation movie={this.props.location.movieName}/>\n                        <MovieInfo movie={this.state.movie} directors={this.state.directors}/>\n                        <MovieInfoBar time={this-this.state.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue}/>\n                    </div> \n                    : null}\n                {this.state.actors ? \n                    <div className=\"rmdb-movie-grid\">\n                        <FourColGrid header={'Actors'}>\n                        {this.state.actors.map((element,i)=>{\n                            return <Actor key={i} actor={element}/>\n                        })}\n                        </FourColGrid>\n                    </div>\n                    :null}\n                    {!this.state.actors && !this.state.loading ? <h1>No Movie Found!</h1>:null}\n                    {this.state.loading ? <Spinner/>:null}\n                    \n                    }\n            </div>\n        )\n    }\n}\n\nexport default Movie;","import React from 'react';\n\nconst NotFound=()=>{\n    return(\n        <div>\n            <h1>WHoooop.This page doesn't exist</h1>\n        </div>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Header from '../elements/Header/Header';\nimport Home from '../Home/Home';\nimport Movie from '../Movie/Movie';\nimport NotFound from '../elements/NotFound/NotFound';\n\nconst App =() =>{\n    return(\n        <BrowserRouter basename='/Reactmovie2/'>\n            <React.Fragment>\n                <Header />\n                <Switch>\n                    <Route path=\"/\" component={Home} exact/>\n                    <Route path=\"/:movieId\" component={Movie} exact/>\n                    <Route component={NotFound}/>\n                </Switch>\n            </React.Fragment>\n        </BrowserRouter>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}