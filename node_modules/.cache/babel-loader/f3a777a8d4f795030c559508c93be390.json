{"ast":null,"code":"var _jsxFileName = \"/home/rocio/Documentos/Reactmovie2/src/components/elements/MovieInfo/MovieInfo.js\";\nimport React from 'react';\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config'; //import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport MovieThumb from '../MovieThumb/MovieThumb';\n\nvar MovieInfo = function MovieInfo(props) {\n  return React.createElement(\"div\", {\n    className: \"emdb-movieinfo\",\n    style: {\n      background: props.movie.backdrop_path ? \"url('\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(props.movie.backdrop_path, \"')\") : '#000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rmbd-movieinfo-thumb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(MovieThumb, {\n    image: props.movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(props.movie.poster_path) : './img/no_image.jpg',\n    clickable: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: \"color:#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.movie.title), React.createElement(\"h3\", {\n    style: \"color:#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Plot\"), React.createElement(\"p\", {\n    style: \"color:#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.movie.overview), React.createElement(\"h3\", {\n    style: \"color:#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"IMDB RATINF\"), React.createElement(\"div\", {\n    className: \"rmdb-rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"meter\", {\n    min: \"0\",\n    max: \"100\",\n    optimum: \"100\",\n    low: \"40\",\n    high: \"70\",\n    value: props.movie.vote_average * 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"rmbd-score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.movie.vote_average)), props.directors.length > 1 ? React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"DIRECTORS\") : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"DIRECTOR\"), props.directors.map(function (element, i) {\n    return React.createElement(\"p\", {\n      key: i,\n      className: \"rmdb-director\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, element.name);\n  })), React.createElement(\"i\", {\n    class: \"fas fa-film\",\n    name: \"film\",\n    size: \"5px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })));\n};\n\nexport default MovieInfo;","map":{"version":3,"sources":["/home/rocio/Documentos/Reactmovie2/src/components/elements/MovieInfo/MovieInfo.js"],"names":["React","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","MovieThumb","MovieInfo","props","background","movie","backdrop_path","poster_path","title","overview","vote_average","directors","length","map","element","i","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {IMAGE_BASE_URL, POSTER_SIZE,BACKDROP_SIZE} from '../../../config';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\n\nconst MovieInfo =(props) =>{\n    return(\n        <div className=\"emdb-movieinfo\"\n            style={{\n                background:props.movie.backdrop_path?`url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')`: '#000'\n            }}\n        >\n        <div className=\"rmdb-movieinfo-content\">\n            <div className=\"rmbd-movieinfo-thumb\">\n            <MovieThumb\n                image={props.movie.poster_path ?`${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`: './img/no_image.jpg'}\n                clickable={false}\n            />\n            </div>\n            <div className=\"rmdb-movieinfo-text\">\n                <h1 style=\"color:#\">{props.movie.title}</h1>\n                <h3 style=\"color:#\">Plot</h3>\n                <p style=\"color:#\">{props.movie.overview}</p>\n                <h3 style=\"color:#\">IMDB RATINF</h3>\n                <div className=\"rmdb-rating\">\n                    {/* la etiqueta meter sirve para mostrar las graficas */}\n                    <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average*10}></meter>\n                    <p className=\"rmbd-score\">{props.movie.vote_average}</p>\n                </div>\n                {props.directors.length > 1 ? <h3>DIRECTORS</h3>: <h3>DIRECTOR</h3>}\n                {props.directors.map((element,i)=>{\n                    return <p key={i} className=\"rmdb-director\">{element.name}</p>\n                })}\n            </div>\n            <i class=\"fas fa-film\" name=\"film\" size=\"5px\"></i>\n            {/* <FontAwesomeIcon className=\"fa-film\" name=\"film\" size=\"5px\"/> */}\n        </div>\n        </div>\n    )\n}\n\nexport default MovieInfo;"]},"metadata":{},"sourceType":"module"}